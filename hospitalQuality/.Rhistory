setwd('/home/williamn/Repository/dataAnalysis/udacity/data\ analysis\ R')
list.files()
pf<- read.csv('pseudo_facebook.tsv', sep = '\t')
library(ggplot2)
library(ggthemes)
library('gridExtra')
pf$mobile_check_in<- NA
pf$mobile_check_in<- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in<- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
getwd()
setwd("/home/williamn/Repository/dataAnalysis")
setwd("/home/williamn/Repository/dataAnalysis/hospitalQuality")
getwd()
set.seed(1)
rpois(5, 2)
outcome<- read.csv("outcome-of-care-measures.csv")
head(outcome)
library(ggplot2)
outcome[, 11]<- as.numeric(outcome[, 11])
hist(outcome[, 11])
str(outcome)
outcome<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11]<- as.numeric(outcome[, 11])
hist(outcome[, 11])
summary(outcome[, 11])
head(outcome)
outcome<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
summary(outcome[, 11])
outcome<- read.csv("outcome-of-care-measures.csv")
head(outcome)
outcome<- read.csv("outcome-of-care-measures.csv")
summary(outcome[, 11])
hist(outcome[, 11])
outcome[, 11]<- as.numeric(outcome[, 11])
hist(outcome[, 11])
summary(outcome[, 11])
outcome<- read.csv("outcome-of-care-measures.csv")
outcome[, 11]<- as.numeric(outcome[, 11])
summary(outcome)
summary(outcome[, 11])
outcome<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome[, 11]<- as.numeric(outcome[, 11])
summary(outcome[, 11])
hist(outcome[, 11])
qplot(x = outcome[, 11], data = outcome)
hist(outcome[, 11])
str(outcome)
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == "state",]
length(state$State)
}
best("TX", "outcome")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
length(state$State)
}
best("TX", "outcome")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
if(length(state$State) > 0){
stop("valid state")
}
else{
stop("invalid state")
}
}
best("TX", "as")
best("TXa", "as")
best("MD", "as")
ha<- "heart attack"
ha
dim(outcome)
summary(outcome[, 11])
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
ha<- "heart attack"
hf<- "heart failure"
pn<- "pneumonia"
if(length(state$State) > 0){
if(outcome != ha | outcome != hf | outcome != pn){
if(outcome == ha){
}
}
else{ stop("invalid outcome")}
}
else{
stop("invalid state")
}
}
best("TX", "as")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
ha<- "heart attack"
hf<- "heart failure"
pn<- "pneumonia"
if(length(state$State) > 0){
if(outcome != ha || outcome != hf || outcome != pn){
if(outcome == ha){
}
}
else{ stop("invalid outcome")}
}
else{
stop("invalid state")
}
}
best("TX", "as")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
ha<- "heart attack"
hf<- "heart failure"
pn<- "pneumonia"
if(length(state$State) > 0){
if(outcome == ha | outcome == hf | outcome == pn){
if(outcome == ha){
stop("valid outcome")
}
}
else{ stop("invalid outcome")}
}
else{
stop("invalid state")
}
}
best("TX", "as")
best("TX", "heart attack")
best("TX", "heart failure")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
ha<- "heart attack"
hf<- "heart failure"
pn<- "pneumonia"
if(length(state$State) > 0){
if(outcome != ha | outcome != hf | outcome != pn){
stop("invalid outcome")
}
else{ stop("valid outcome")}
}
else{
stop("invalid state")
}
}
best("TX", "heart failure")
best<- function(state, outcome){
data<- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state<- data[data$State == state,]
ha<- "heart attack"
hf<- "heart failure"
pn<- "pneumonia"
if(length(state$State) > 0){
if(outcome != ha || outcome != hf || outcome != pn){
stop("invalid outcome")
}
else{ stop("valid outcome")}
}
else{
stop("invalid state")
}
}
best("TX", "heart failure")
best("TX", "pneumonia")
